name: build-and-release

on:
  # 手动触发（备用）
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Release tag (e.g. v1.2.3)"
        required: true
        type: string
      release_name:
        description: "Release title (optional)"
        required: false
        type: string
      prerelease:
        description: "Mark as prerelease"
        required: false
        type: boolean
        default: false
  # 仅在推送符合版本格式的 tag 时触发（bumpp 已负责创建并推送 tag）
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-*"

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.display_name }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            display_name: macOS
            artifact_name: macos-artifacts
            artifact_paths: |
              out/make/**/*.zip
          - os: windows-latest
            display_name: Windows
            artifact_name: windows-artifacts
            artifact_paths: |
              out/make/**/*.exe
              out/make/**/*.nupkg
              out/make/**/*.RELEASES
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build platform package
        run: pnpm make

      - name: List build artifacts
        run: |
          echo "Artifacts in out/make:" 
          ls -R out/make
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_paths }}
          if-no-files-found: error

  release:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
      - name: Display downloaded files
        run: ls -R
      - name: Release metadata
        id: meta
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            tag="${{ github.event.inputs.tag_name }}"
            name="${{ github.event.inputs.release_name }}"
            [ -z "$name" ] && name="$tag"
            pre=${{ github.event.inputs.prerelease || false }}
          else
            tag="${GITHUB_REF_NAME}"  # e.g. v1.2.3
            name="Release $tag"
            if [[ $tag == *-* ]]; then pre=true; else pre=false; fi
          fi
          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "name=$name" >> $GITHUB_OUTPUT
          echo "prerelease=$pre" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            macos-artifacts/**
            windows-artifacts/**
          tag_name: ${{ steps.meta.outputs.tag }}
          name: ${{ steps.meta.outputs.name }}
          draft: false
          prerelease: ${{ steps.meta.outputs.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
